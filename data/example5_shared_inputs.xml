<?xml version="1.0"?>
<COLLADA>
  <asset>
    <created>2011-04-12T13:23:22Z</created>
    <modified>2011-04-12T13:23:22Z</modified>
  </asset>

  <library_geometries>

    <geometry id="shaded_cube">
      <mesh>

        <source id="positions">
          <float_array id="positions_array" count="24">
           -1.0  1.0 -1.0
            1.0  1.0 -1.0
            1.0 -1.0 -1.0
           -1.0 -1.0 -1.0

           -1.0  1.0  1.0
            1.0  1.0  1.0
            1.0 -1.0  1.0
           -1.0 -1.0  1.0
          </float_array>
          <technique_common>
            <accessor source="#positions_array" count="8">
              <param name="X" type="float"/>
              <param name="Y" type="float"/>
              <param name="Z" type="float"/>
            </accessor>
          </technique_common>
        </source>

        <source id="normals">
          <float_array id="normals_array" count="18">
             0.0  0.0 -1.0
             0.0  0.0  1.0
             1.0  0.0  0.0
            -1.0  0.0  0.0
             0.0  1.0  0.0
             0.0 -1.0  0.0
          </float_array>
          <technique_common>
            <accessor source="normals_array" count="6">
              <param name="X" type="float"/>
              <param name="Y" type="float"/>
              <param name="Z" type="float"/>
            </accessor>
          </technique_common>
        </source>


        <vertices id="geometry_vertices">
          <input semantic="POSITION" source="#positions"/>
        </vertices>

        <points count="8" material="solid" />

        <lines count="12" material="solid">
          <p>
          0 1
          1 2
          2 3
          3 0
          4 5
          5 6
          6 7
          7 4
          4 0
          5 1
          6 2
          7 3
          </p>
        </lines>

        <triangles count="12" material="shaded">
          <input offset="0" semantic="VERTEX" source="#geometry_vertices" />
          <input offset="1" semantic="NORMAL" source="#normals" />
          <p>
           3 0  0 0  1 0
           1 0  2 0  3 0
           5 1  4 1  7 1
           7 1  6 1  5 1
           1 2  5 2  2 2
           5 2  6 2  2 2
           0 3  4 3  7 3
           7 3  3 3  0 3
           0 4  4 4  5 4
           5 4  1 4  0 4
           2 5  6 5  7 5
           7 5  3 5  2 5
          </p>
        </triangles>
      </mesh>
    </geometry>

  </library_geometries>

  <library_effects>

    <effect id="effect_solid">
      <newparam sid="mvp"><semantic>MODELVIEW_PROJECTION_MATRIX</semantic><float4x4>0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3</float4x4></newparam>
      <newparam sid="shift"><float>0.001</float></newparam>
      <newparam sid="color"><float3>1 1 1</float3></newparam>
      <profile_GLSL>
        <technique sid="default">
          <pass>
            <states>
              <depth_test_enable value="TRUE" />
              <point_size value="15"/>
            </states>
            <program>
              <shader stage="VERTEX">
                <sources>
                  <inline>
uniform mat4 MVP;
uniform float shift;
attribute vec3 position;
void
main()
{
  gl_Position = MVP * vec4( position, 1.0 );
  gl_Position = gl_Position - vec4( 0.0, 0.0, gl_Position.w*shift, 0.0 );
}
                </inline>
              </sources>
            </shader>
            <shader stage="FRAGMENT">
              <sources>
                <inline>
uniform vec3 color;
void
main()
{
  gl_FragColor = vec4( color, 1.0 );
}
                </inline>
              </sources>
            </shader>
            <bind_attribute symbol="position"><semantic>POSITION</semantic></bind_attribute>
            <bind_uniform symbol="MVP"><param ref="mvp" /></bind_uniform>
            <bind_uniform symbol="color"><param ref="color" /></bind_uniform>
            <bind_uniform symbol="shift"><param ref="shift" /></bind_uniform>
          </program>
        </pass>
      </technique>
    </profile_GLSL>
    </effect>

    <effect id="effect_shaded">
    <newparam sid="mvp"><semantic>MODELVIEW_PROJECTION_MATRIX</semantic><float4x4>0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3</float4x4></newparam>
    <newparam sid="nm"><semantic>NORMAL_MATRIX</semantic><float3x3>1 0 0 0 1 0 0 0 1</float3x3></newparam>
    <newparam sid="light_z"><semantic>LIGHT0_Z_WORLD</semantic><float3>0 0 0</float3></newparam>
    <newparam sid="color"><float3>1 1 1</float3></newparam>
    <profile_GLSL>
      <technique sid="default">
        <pass>
          <states>
            <depth_test_enable value="TRUE" />
          </states>
          <program>
            <!-- The vertex shader -->
            <shader stage="VERTEX">
              <sources>
                <inline>
uniform mat4 MVP;
uniform mat3 NM;
attribute vec3 position;
attribute vec3 normal;
varying vec3 es_normal;
void
main()
{
  es_normal = NM * normal;
  gl_Position = MVP * vec4( position, 1.0 );
}
                </inline>
              </sources>
            </shader>
            <!-- The fragment shader -->
            <shader stage="FRAGMENT">
              <sources>
                <inline>
varying vec3 es_normal;
uniform vec3 light_z;
uniform vec3 color;
void
main()
{
  gl_FragColor = vec4( color*max(0.1, dot( es_normal, light_z ) ), 1.0 );
}
                </inline>
              </sources>
            </shader>
            <bind_attribute symbol="position"><semantic>POSITION</semantic></bind_attribute>
            <bind_attribute symbol="normal"><semantic>NORMAL</semantic></bind_attribute>
            <bind_uniform symbol="MVP"><param ref="mvp" /></bind_uniform>
            <bind_uniform symbol="NM"><param ref="nm" /></bind_uniform>
            <bind_uniform symbol="light_z"><param ref="light_z"/></bind_uniform>
            <bind_uniform symbol="color"><param ref="color" /></bind_uniform>
          </program>
        </pass>
      </technique>
    </profile_GLSL>

    </effect>

  </library_effects>

  <library_materials>
    <material id="material_solid">
      <instance_effect url="#effect_solid" />
    </material>
    <material id="material_shaded">
      <instance_effect url="#effect_shaded" />
    </material>
  </library_materials>

  <library_lights>

    <!-- Here we define a point light. The position of the light is given when
         when we instantiate the light into the scene graph -->
    <light id="my_light">
      <technique_common>
        <point>
          <!-- color is mandatory -->
          <color>0.8 1 1</color>
        </point>
      </technique_common>
    </light>

  </library_lights>

  <library_visual_scenes>
    <visual_scene id="onscreen_example1">
      <node id="root_node">
        <instance_node url="#app_camera_node" />

        <!-- And we instantiate the light source in the scene -->
        <node id="light_node">
          <instance_light url="#my_light" />
        </node>

        <node>
          <instance_geometry url="#shaded_cube">
            <bind_material>
              <technique_common>
                <instance_material symbol="solid" target="material_solid" />
                <instance_material symbol="shaded" target="material_shaded" />
              </technique_common>
            </bind_material>
          </instance_geometry>
        </node>
      </node>
      <evaluate_scene>
        <render camera_node="#app_camera_node" />
        <!-- This is an extension. We specify which light source (or actually
             the node that contains the light source) that shall play the role
             as light index x. Scene currently supports four active light sources -->
        <extra>
	  <technique profile="scene">
	    <light_node index="0" ref="#light_node" />
	  </technique>
        </extra>
      </evaluate_scene>
    </visual_scene>

  </library_visual_scenes>

</COLLADA>
